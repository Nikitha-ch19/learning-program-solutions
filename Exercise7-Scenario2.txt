

CREATE TABLE Employees (
    EmployeeID NUMBER PRIMARY KEY,
    Name VARCHAR2(100),
    Position VARCHAR2(50),
    Salary NUMBER,
    Department VARCHAR2(50),
    HireDate DATE
);

CREATE OR REPLACE PACKAGE EmployeeManagement AS
    PROCEDURE HireEmployee (
        p_id NUMBER,
        p_name VARCHAR2,
        p_position VARCHAR2,
        p_salary NUMBER,
        p_department VARCHAR2,
        p_hire_date DATE
    );

    PROCEDURE UpdateEmployee (
        p_id NUMBER,
        p_name VARCHAR2,
        p_position VARCHAR2,
        p_salary NUMBER,
        p_department VARCHAR2
    );

    FUNCTION GetAnnualSalary (
        p_id NUMBER
    ) RETURN NUMBER;
END EmployeeManagement;
/

CREATE OR REPLACE PACKAGE BODY EmployeeManagement AS
    PROCEDURE HireEmployee (
        p_id NUMBER,
        p_name VARCHAR2,
        p_position VARCHAR2,
        p_salary NUMBER,
        p_department VARCHAR2,
        p_hire_date DATE
    ) IS
    BEGIN
        INSERT INTO Employees (EmployeeID, Name, Position, Salary, Department, HireDate)
        VALUES (p_id, p_name, p_position, p_salary, p_department, p_hire_date);
        COMMIT;
    EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            DBMS_OUTPUT.PUT_LINE('Error: Employee ID already exists.');
    END HireEmployee;

    PROCEDURE UpdateEmployee (
        p_id NUMBER,
        p_name VARCHAR2,
        p_position VARCHAR2,
        p_salary NUMBER,
        p_department VARCHAR2
    ) IS
    BEGIN
        UPDATE Employees
        SET Name = p_name,
            Position = p_position,
            Salary = p_salary,
            Department = p_department
        WHERE EmployeeID = p_id;

        IF SQL%ROWCOUNT = 0 THEN
            DBMS_OUTPUT.PUT_LINE('Error: Employee not found.');
        ELSE
            COMMIT;
        END IF;
    END UpdateEmployee;

    FUNCTION GetAnnualSalary (
        p_id NUMBER
    ) RETURN NUMBER IS
        v_salary NUMBER;
    BEGIN
        SELECT Salary INTO v_salary
        FROM Employees
        WHERE EmployeeID = p_id;

        RETURN v_salary * 12;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN NULL;
    END GetAnnualSalary;
END EmployeeManagement;
/

BEGIN
    EmployeeManagement.HireEmployee(1, 'Amit Sharma', 'Manager', 60000, 'HR', TO_DATE('2015-06-01', 'YYYY-MM-DD'));
    EmployeeManagement.HireEmployee(2, 'Neha Reddy', 'Developer', 50000, 'IT', TO_DATE('2018-01-15', 'YYYY-MM-DD'));
    EmployeeManagement.HireEmployee(3, 'Ravi Kumar', 'Analyst', 45000, 'Finance', TO_DATE('2017-04-20', 'YYYY-MM-DD'));
    EmployeeManagement.HireEmployee(4, 'Divya Singh', 'Developer', 52000, 'IT', TO_DATE('2019-08-12', 'YYYY-MM-DD'));
    EmployeeManagement.HireEmployee(5, 'Anjali Mehra', 'Clerk', 38000, 'HR', TO_DATE('2020-11-30', 'YYYY-MM-DD'));
    COMMIT;
END;
/

BEGIN
    EmployeeManagement.UpdateEmployee(2, 'Neha Thomas', 'Senior Developer', 55000, 'IT');
    DBMS_OUTPUT.PUT_LINE('Annual salary of Employee 1: ₹' || EmployeeManagement.GetAnnualSalary(1));
END;
/



Output:

Annual salary of Employee 1: ₹720000


